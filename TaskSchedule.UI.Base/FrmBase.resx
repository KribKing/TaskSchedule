<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAA
        ACEAAABIAAAAegAAAJEAAACRAAAAfAAAAEwAAAAiAAAABwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAA
        AEEAAACfAAAAtgAAAJMAAABkAAAAVwAAAFcAAABjAAAAjwAAALYAAAChAAAARAAAAAcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AB0AAACUAAAAsAAAAFQAAAAaAAAACwAAABMAAAAfAAAAHwAAABYAAAANAAAAGQAAAFAAAACtAAAAmAAA
        ACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAuAAAAsQAAAHgAAAAUAAAAFAAAAGcAAACpAAAAswAAAMgAAADOAAAAtwAAAK0AAABuAAAAGgAA
        ABIAAAByAAAAtAAAADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAJgAAALQAAABcAAAABwAAAFIAAAC5AAAAkgAAAEUAAAAgAAAAbwAAAI0AAAAgAAAAQwAA
        AI0AAAC/AAAAXQAAAAgAAABWAAAAtgAAACoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAABAAAACiAAAAbAAAAAgAAABwAAAAtAAAAEAAAAAHAAAAAAAAAAAAAABeAAAAfAAA
        AAAAAAAAAAAABQAAADwAAACyAAAAgwAAAAoAAABiAAAAqgAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAXwAAAKEAAAALAAAAXwAAAK4AAAAjAAAAAAAAAAAAAAAAAAAAAAAA
        AB0AAAAkAAAAAAAAAAAAAAAAAAAAAAAAAB8AAACrAAAAdQAAAAsAAACSAAAAbwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAACyAAAAMgAAACwAAAC7AAAALgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACkAAAC8AAAANAAAAC0AAAC2AAAAGAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASgAAAKQAAAALAAAAjAAAAHMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGUAAACdAAAACwAA
        AJEAAABXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAACDAAAAXAAAACAAAAC3AAAAHwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHgAA
        ALkAAAAgAAAATgAAAJsAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAAK0AAAAsAAAAQgAA
        AKUAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAGgAAABwAAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAEAAAAkwAAAEoAAAAsAAAArwAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZAAAAswAA
        ABoAAABbAAAAngAAACEAAAAcAAAAAwAAAAAAAAAAAAAAAAAAADkAAAC1AAAAsgAAAEUAAAAAAAAAAAAA
        AAAAAAACAAAAGgAAAB4AAAB+AAAAdwAAABwAAACyAAAAGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABwAAACyAAAAFwAAAGAAAADaAAAAswAAAJQAAAAPAAAAAAAAAAAAAAAAAAAAaAAAAHkAAABlAAAAjgAA
        AAAAAAAAAAAAAAAAAA8AAACRAAAAswAAANEAAACEAAAAGQAAALIAAAAbAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAFwAAALIAAAAcAAAAWAAAAJwAAAAVAAAAEQAAAAEAAAAAAAAAAAAAAAAAAABSAAAAmgAA
        AIMAAABiAAAAAAAAAAAAAAAAAAAAAQAAABAAAAATAAAAegAAAG4AAAAeAAAAsgAAABcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAALAAAAqQAAADAAAAA8AAAAqQAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACsAAADFAAAAxAAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAACbAAAAPwAAADEAAACtAAAACwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB3AAAAagAAABkAAAC0AAAAJwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAADQAAAMIAAADGAAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgAAALcAAAAZAAAAWAAA
        AJMAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACsAAAACwAAAHYAAACIAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAagAAAIIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABxAAAAjQAA
        AAwAAACgAAAARwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAKkAAABBAAAAHwAA
        ALYAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOgAA
        ALkAAAAjAAAAPAAAALEAAAARAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATQAA
        AK4AAAARAAAARgAAALgAAAA3AAAAAAAAAAAAAAAAAAAAAAAAADAAAAA9AAAAAAAAAAAAAAAAAAAAAAAA
        ADIAAAC1AAAAUAAAABIAAACmAAAAVQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAIAAAAiQAAAIoAAAAJAAAATgAAALcAAABgAAAADgAAAAAAAAAAAAAAYAAAAH8AAAAAAAAAAAAA
        AAwAAABZAAAAvAAAAFoAAAAJAAAAfQAAAJYAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAWAAAAowAAAH8AAAALAAAALgAAAJ8AAACuAAAAbAAAADAAAAB4AAAAkwAA
        ADEAAABpAAAAsAAAAKcAAAA5AAAACwAAAHYAAAClAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAABUAAABDAAAA3wAAAJ0AAAAkAAAACwAAADcAAABxAAAAowAA
        ALoAAADCAAAAqgAAAH4AAABCAAAADgAAACAAAACZAAAA2wAAAEoAAAAVAAAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyAAAAwgAAAMwAAAB/AAAAdgAAANMAAACEAAAALAAA
        AA0AAAANAAAAEQAAABMAAAAPAAAADgAAACkAAAB+AAAAzgAAAHwAAAByAAAA0wAAAMAAAAA4AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAAKgAAAB0AAAAfgAAALQAAACkAAAAlQAA
        AGsAAACuAAAArwAAAKYAAACUAAAAlAAAAKQAAACvAAAArwAAAG4AAACFAAAAsQAAALIAAACFAAAAawAA
        ALAAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAngAAAKMAAAAtAAAAQgAA
        AMIAAACOAAAABgAAABAAAAA7AAAAxwAAAGsAAABrAAAAxwAAAD0AAAARAAAABgAAAIgAAADIAAAARQAA
        ACsAAACfAAAApAAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAZAAA
        ALcAAABjAAAAhgAAAJcAAAADAAAAGQAAAIAAAADXAAAAjAAAAIwAAADXAAAAgQAAAB0AAAACAAAAhwAA
        AJkAAABdAAAAtQAAAGcAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAACAAAALQAAAJ4AAAC6AAAAIgAAAAAAAABLAAAAvQAAAGAAAABfAAAAXwAAAF4AAACpAAAAVAAA
        AAAAAAAeAAAAugAAAKUAAAAxAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAAB4AAAABAAAAAAAAAE4AAACaAAAAAQAAAAAAAAAAAAAAAAAA
        AHcAAABXAAAAAAAAAAEAAAAbAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASwAAAMIAAABtAAAAbAAA
        AGwAAABsAAAAsAAAAFUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbAAAAYwAA
        AGYAAABmAAAAZgAAAGYAAABjAAAAHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////gB///gAH//wAA//4AAH/8AAA/+AZgH/geeB/wP/wP8H/+D+B/
        /gfgfD4H4Bw4B+AcOAfgHDgH4Hw+B/B8PgfwPjwP8D58D/geeB/4BmAf/AAAP/gAAB/4AAAf8AAAD/AA
        AA/4AAAf/BAIP/8RyP//8A////AP//////8=
</value>
  </data>
</root>